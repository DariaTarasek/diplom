syntax = "proto3";

package patient;

import "google/protobuf/timestamp.proto";

option go_package = "patient/proto;patientpb";

message GetAppointmentSlotsRequest{
  int32 doctor_id = 1;
}

message GetAppointmentSlotsResponse {
  repeated DaySlots slots = 1;
}

message DaySlots {
  string date = 1;
  repeated string slots = 2;
}

message Appointment {
  int32 id = 1;
  int32 doctor_id = 2;
  google.protobuf.Timestamp date = 3;
  google.protobuf.Timestamp time = 4;
  int32 patient_id = 5;
  string second_name = 6;
  string first_name = 7;
  string surname = 8;
  google.protobuf.Timestamp birth_date = 9;
  string gender = 10;
  string phone_number = 11;
  string status = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message AddAppointmentRequest {
  Appointment appointment = 1;
}

message DefaultResponse {

}

message UpcomingAppointments {
  int32 id = 1;
  string date = 2;
  string time = 3;
  int32 doctor_id = 4;
  string doctor = 5;
  string specialty = 6;
}

message UpdateAppointmentRequest {
  Appointment appointment = 1;
}

message GetUpcomingAppointmentsRequest {
  string token = 1;
}

message GetUpcomingAppointmentsResponse {
  repeated UpcomingAppointments appointments = 1;
}

message GetByIDRequest {
  int32 id = 1;
}

message GetHistoryVisitsRequest {
  string token = 1;
}

message HistoryVisit {
  int32 id = 1;
  string date = 2;
  int32 doctor_id = 3;
  string doctor = 4;
  string diagnose = 5;
  string treatment = 6;
}

message GetHistoryVisitsResponse {
  repeated HistoryVisit visits = 1;
}

message UploadTestRequest {
  string token = 1;         // токен авторизации
  string file_name = 2;     // имя файла
  bytes file_content = 3;   // содержимое DICOM-файла
  string description = 4;
}

message UploadTestResponse {
  string document_id = 1;   // UUID созданного документа
}

message GetDocumentsRequest {
  string token = 1; // строка, содержащая числовой ID пациента
}

// Ответ с массивом документов
message GetDocumentsResponse {
  repeated DocumentInfo documents = 1;
}

// Информация о документе
message DocumentInfo {
  string id = 1;           // UUID документа
  string file_name = 2;    // Имя файла
  string description = 3;  // Описание
  string created_at = 6;   // Дата создания (формат YYYY-MM-DD HH:MM)
}

// Запрос на скачивание документа
message DownloadDocumentRequest {
  string document_id = 1; // UUID документа
}

// Ответ со скачанным файлом
message DownloadDocumentResponse {
  string file_name = 1;    // Имя файла
  bytes file_content = 2;  // Содержимое файла
}

service PatientService {
  rpc GetAppointmentSlots(GetAppointmentSlotsRequest) returns (GetAppointmentSlotsResponse);
  rpc AddAppointment(AddAppointmentRequest) returns (DefaultResponse);
  rpc GetUpcomingAppointments(GetUpcomingAppointmentsRequest) returns (GetUpcomingAppointmentsResponse);
  rpc UpdateAppointment(UpdateAppointmentRequest) returns (DefaultResponse);
  rpc CancelAppointment(GetByIDRequest) returns (DefaultResponse);
  rpc GetHistoryVisits(GetHistoryVisitsRequest) returns (GetHistoryVisitsResponse);
  rpc UploadTest(UploadTestRequest) returns (UploadTestResponse);
  rpc GetDocumentsByPatientID(GetDocumentsRequest) returns (GetDocumentsResponse);
  rpc DownloadDocument(DownloadDocumentRequest) returns (DownloadDocumentResponse);
}