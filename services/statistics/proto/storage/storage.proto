syntax = "proto3";

package storage;


option go_package = "storage/proto;storagepb";

message EmptyRequest {}

message IntResponse {
  int32 int = 1;
}

message ServiceStats {
  string name = 1;
  int32 usage_count = 2;
}

message ServiceStatsResponse {
  repeated ServiceStats service_stats = 1;
}

message DoctorAvgVisit {
  int32 doctor_id = 1;
  float avg_weekly_visits = 2;
}

message DoctorAvgVisitResponse {
  repeated DoctorAvgVisit visits = 1;
}

message DoctorCheck {
  int32 doctor_id = 1;
  float avg_check = 2;
}

message DoctorAvgCheckResponse {
  repeated DoctorCheck check = 1;
}

message DoctorUniquePatient {
  int32 doctor_id = 1;
  int32 unique_patients = 2;
}

message DoctorUniquePatientResponse{
  repeated DoctorUniquePatient patients = 1;
}

message AgeGroupStat {
  int32 age_group = 1;
  float percent = 2;
}

message AgeGroupStatResponse {
  repeated AgeGroupStat age_groups = 1;
}

message FloatResponse {
  float float = 1;
}

message GetByIDRequest {
  int32 id = 1;
}

message Doctor {
  int32 user_id = 1;
  string first_name = 2;
  string second_name = 3;
  string surname = 4;
  string phone_number = 5;
  string email = 6;
  string education = 7;
  int32 experience = 8;
  string gender = 9;
}

message GetDoctorResponse {
  Doctor doctor = 1;
}

service StorageService {
  // статистика
  rpc GetTotalPatients(EmptyRequest) returns (IntResponse);
  rpc GetTotalVisits(EmptyRequest) returns (IntResponse);
  rpc GetTopServices(EmptyRequest) returns (ServiceStatsResponse);
  rpc GetDoctorAvgVisit(EmptyRequest) returns (DoctorAvgVisitResponse);
  rpc GetDoctorAvgCheck(EmptyRequest) returns (DoctorAvgCheckResponse);
  rpc GetDoctorUniquePatient(EmptyRequest) returns (DoctorUniquePatientResponse);
  rpc GetAgeGroupStat(EmptyRequest) returns (AgeGroupStatResponse);
  rpc GetNewPatientsThisMonth(EmptyRequest) returns (IntResponse);
  rpc GetAvgVisitsPerPatient(EmptyRequest) returns (FloatResponse);
  rpc GetTotalIncome(EmptyRequest) returns (FloatResponse);
  rpc GetMonthlyIncome(EmptyRequest) returns (FloatResponse);
  rpc GetClinicAverageCheck(EmptyRequest) returns (FloatResponse);
  rpc GetDoctorByID(GetByIDRequest) returns (GetDoctorResponse);
}
