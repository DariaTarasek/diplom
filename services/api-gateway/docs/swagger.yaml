basePath: /
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  handlers_info.ClinicScheduleResponse:
    properties:
      schedule:
        items:
          $ref: '#/definitions/model.ClinicWeeklySchedule'
        type: array
      slot_minutes:
        type: integer
    type: object
  handlers_info.DoctorScheduleResponse:
    properties:
      schedule:
        items:
          $ref: '#/definitions/model.DoctorWeeklySchedule'
        type: array
      slot_minutes:
        type: integer
    type: object
  model.AgeGroupStat:
    properties:
      ageGroup:
        type: string
      percent:
        type: number
    type: object
  model.AllStats:
    properties:
      ageGroupStat:
        items:
          $ref: '#/definitions/model.AgeGroupStat'
        type: array
      avgVisitPerPatient:
        type: number
      clinicAvgCheck:
        type: number
      doctorAvgVisit:
        items:
          $ref: '#/definitions/model.DoctorAvgVisit'
        type: array
      doctorCheckStat:
        items:
          $ref: '#/definitions/model.DoctorCheckStat'
        type: array
      doctorUniquePatients:
        items:
          $ref: '#/definitions/model.DoctorUniquePatients'
        type: array
      monthlyIncome:
        type: number
      newPatientsThisMonth:
        type: integer
      topServices:
        items:
          $ref: '#/definitions/model.TopService'
        type: array
      totalIncome:
        type: number
      totalPatients:
        type: integer
      totalVisits:
        type: integer
    type: object
  model.Appointment:
    properties:
      birthDate:
        type: string
      createdAt:
        type: string
      date:
        type: string
      doctor_id:
        type: integer
      firstName:
        type: string
      gender:
        type: string
      id:
        type: integer
      phone:
        type: string
      secondName:
        type: string
      status:
        type: string
      surname:
        type: string
      time:
        type: string
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  model.ClinicDailyOverride:
    properties:
      date:
        type: string
      end_time:
        type: string
      id:
        type: integer
      start_time:
        type: string
      type:
        type: string
    type: object
  model.ClinicWeeklySchedule:
    properties:
      day:
        type: integer
      end_time:
        type: string
      id:
        type: integer
      is_day_off:
        type: boolean
      slot_minutes:
        type: integer
      start_time:
        type: string
    type: object
  model.Doctor:
    properties:
      education:
        type: string
      email:
        type: string
      experience:
        type: integer
      firstName:
        type: string
      gender:
        type: string
      phone:
        type: string
      secondName:
        type: string
      surname:
        type: string
      user_id:
        type: integer
    type: object
  model.DoctorAvgVisit:
    properties:
      avgWeeklyVisits:
        type: number
      doctor:
        type: string
    type: object
  model.DoctorCheckStat:
    properties:
      avgCheck:
        type: number
      doctor:
        type: string
    type: object
  model.DoctorDailyOverride:
    properties:
      date:
        type: string
      doctor_id:
        type: integer
      end_time:
        type: string
      id:
        type: integer
      start_time:
        type: string
      type:
        type: string
    type: object
  model.DoctorUniquePatients:
    properties:
      doctorId:
        type: string
      uniquePatients:
        type: integer
    type: object
  model.DoctorWeeklySchedule:
    properties:
      day:
        type: integer
      end_time:
        type: string
      id:
        type: integer
      is_day_off:
        type: boolean
      selectedDoctor:
        type: integer
      slot_minutes:
        type: integer
      start_time:
        type: string
    type: object
  model.DocumentInfo:
    properties:
      created_at:
        type: string
      description:
        type: string
      file_name:
        type: string
      id:
        type: string
    type: object
  model.HistoryVisits:
    properties:
      date:
        type: string
      diagnose:
        type: string
      doctor:
        type: string
      doctor_id:
        type: integer
      id:
        type: integer
      treatment:
        type: string
    type: object
  model.ICDCode:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
  model.Material:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
  model.ScheduleEntry:
    properties:
      label:
        type: string
      slots:
        items:
          type: string
        type: array
    type: object
  model.Service:
    properties:
      category_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
    type: object
  model.ServiceType:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.Specialization:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  model.TopService:
    properties:
      count:
        type: integer
      name:
        type: string
    type: object
  model.UpcomingAppointment:
    properties:
      date:
        type: string
      doctor:
        type: string
      doctorId:
        type: integer
      id:
        type: integer
      specialty:
        type: string
      time:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: ПО для стоматологической клиники
  title: Примастом API-Gateway
  version: "1.0"
paths:
  /api/appointment-doctor-schedule/{doctorId}:
    get:
      parameters:
      - description: ID врача
        in: path
        name: doctorId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ScheduleEntry'
            type: array
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/gin.H'
      summary: Получить доступные слоты для записи к врачу
      tags:
      - Запись
  /api/appointments:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные записи
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/model.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: Запись добавлена
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Неверные входные данные
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Ошибка при создании записи
          schema:
            $ref: '#/definitions/gin.H'
      summary: Добавить новую запись к врачу
      tags:
      - Запись
  /api/appointments/cancel/{id}:
    get:
      parameters:
      - description: ID записи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Запись отменена
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Ошибка при отмене записи
          schema:
            $ref: '#/definitions/gin.H'
      summary: Отменить запись
      tags:
      - Запись
  /api/appointments/transfer:
    put:
      consumes:
      - application/json
      parameters:
      - description: Обновленные данные записи
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/model.Appointment'
      produces:
      - application/json
      responses:
        "200":
          description: Запись успешно обновлена
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Неверные входные данные
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Ошибка при обновлении записи
          schema:
            $ref: '#/definitions/gin.H'
      summary: Обновить данные записи (перенос)
      tags:
      - Запись
  /api/clinic-overrides/{date}:
    get:
      parameters:
      - description: Дата в формате YYYY-MM-DD
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ClinicDailyOverride'
        "400":
          description: Неверный формат даты
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Переопределение не найдено
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить переопределение расписания клиники
      tags:
      - info
  /api/clinic-schedule:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers_info.ClinicScheduleResponse'
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить постоянное расписание клиники
      tags:
      - info
  /api/doctor-overrides/{doctor_id}/{date}:
    get:
      parameters:
      - description: ID врача
        in: path
        name: doctor_id
        required: true
        type: integer
      - description: Дата в формате YYYY-MM-DD
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DoctorDailyOverride'
        "400":
          description: Неверный формат даты или ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Переопределение не найдено
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить переопределение расписания врача
      tags:
      - info
  /api/doctor-schedule/{selectedDoctor}:
    get:
      parameters:
      - description: ID врача
        in: path
        name: selectedDoctor
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers_info.DoctorScheduleResponse'
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить постоянное расписание врача
      tags:
      - info
  /api/doctors:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Doctor'
            type: array
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить всех врачей
      tags:
      - info
  /api/doctors/{specialty}:
    get:
      parameters:
      - description: ID специальности
        in: path
        name: specialty
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Doctor'
            type: array
        "400":
          description: Некорректный ID специальности
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка получения данных
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить врачей по специальности
      tags:
      - info
  /api/icd-codes:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ICDCode'
            type: array
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить коды МКБ
      tags:
      - info
  /api/materials:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/model.Material'
              type: array
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список материалов
      tags:
      - info
  /api/patient/history:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.HistoryVisits'
            type: array
        "401":
          description: Необходима авторизация
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Недостаточно прав
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить историю посещений
      tags:
      - Пациент
  /api/patient/tests:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DocumentInfo'
            type: array
        "401":
          description: Необходима авторизация
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Недостаточно прав
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить документы пациента
      tags:
      - Пациент
  /api/patient/tests/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: Файл документа
        in: formData
        name: file
        required: true
        type: file
      - description: Описание файла
        in: formData
        name: description
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Документ добавлен
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверный запрос или ошибка файла
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Необходима авторизация
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Недостаточно прав
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Загрузить документ
      tags:
      - Пациент
  /api/patient/upcoming:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UpcomingAppointment'
            type: array
        "401":
          description: Токен не найден
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Недостаточно прав
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Ошибка при получении данных
          schema:
            $ref: '#/definitions/gin.H'
      summary: Получить список предстоящих записей пациента
      tags:
      - Запись
  /api/service-categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/model.ServiceType'
              type: array
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список категорий услуг
      tags:
      - info
  /api/services:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/model.Service'
              type: array
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список услуг
      tags:
      - info
  /api/specialties:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Specialization'
            type: array
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список всех специализаций
      tags:
      - info
  /api/statistics:
    get:
      description: 'Возвращает агрегированную информацию: общее число пациентов, визитов,
        топ-услуги, среднюю загруженность и выручку по врачам, распределение по возрастным
        группам и др.'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AllStats'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить общую статистику по клинике
      tags:
      - Статистика
  /patient/tests/{id}/download:
    get:
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Файл
          schema:
            type: file
        "401":
          description: Необходима авторизация
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Доступ запрещён
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Скачать документ
      tags:
      - Пациент
swagger: "2.0"
