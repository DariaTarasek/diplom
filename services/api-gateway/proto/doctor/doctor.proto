syntax = "proto3";

package doctor;

import "google/protobuf/timestamp.proto";

option go_package = "doctor/proto;doctorpb";

message Appointment {
  int32 id = 1;
  int32 doctor_id = 2;
  google.protobuf.Timestamp date = 3;
  google.protobuf.Timestamp time = 4;
  int32 patient_id = 5;
  string second_name = 6;
  string first_name = 7;
  string surname = 8;
  google.protobuf.Timestamp birth_date = 9;
  string gender = 10;
  string phone_number = 11;
  string status = 12;
  google.protobuf.Timestamp created_at = 13;
  google.protobuf.Timestamp updated_at = 14;
}

message GetAppointmentByIDResponse {
  Appointment appt = 1;
}

message GetTodayAppointmentsRequest {
  string token = 1;
}

message GetUpcomingAppointmentsRequest {
  string token = 1;
}

message GetUpcomingAppointmentsResponse {
  ScheduleTable schedule = 1;
}

message ScheduleTable {
  repeated string dates = 1;
  repeated string times = 2;
  repeated ScheduleCell table = 3;
}

message ScheduleCell {
  string date = 1; // "01.06.2025"
  string time = 2; // "09:00"
  UpcomingAppointment appointment = 3; // optional
}

message UpcomingAppointment {
  int64 id = 1;
  int64 patient_id = 2;
  string patient = 3;
}

message AppointmentsResponse {
  repeated Appointment appointments = 1;
}

message TodayAppointment {
  int32 id = 1;
  string date = 2;
  string time = 3;
  int32 patientID = 4;
  string patient = 5;
}

message GetTodayAppointmentsResponse {
  repeated TodayAppointment appointments = 1;
}

message PatientAllergiesChronics {
  int32 id = 1;
  int32 patient_id = 2;
  string type = 3;
  string title = 4;
}

message GetPatientAllergiesChronicsResponse {
  repeated PatientAllergiesChronics patient_allergies_chronics = 1;
}

message GetByIdRequest {
  int32 id = 1;
}

message AppointmentResponse {

}

message Diagnose {
  string icd_code = 1;
  string notes = 2;
}

message VisitDiagnose {
  int32 id = 1;
  int32 visit_id = 2;
  int32 icd_code_id = 3;
  string note = 4;
}

message Visit  {
  int32 id = 1;
  int32 appt_id = 2;
  int32 patient_id = 3;
  string doctor = 4;
  string complaints = 5;
  string treatment = 6;
  string createdAt = 7;
  repeated Diagnose diagnoses = 8;
}

message GetPatientVisitsResponse{
  repeated Visit visits = 1;
}

message AddVisitMaterials {
  int32 visit_id = 1;
  int32 material_id = 2;
  int32 amount = 3;
}
message AddVisitMaterialsRequest {
  repeated AddVisitMaterials materials = 1;
}

message AddVisitServices {
  int32 visit_id = 1;
  int32 service_id = 2;
  int32 amount = 3;
}
message AddVisitServicesRequest {
  repeated AddVisitServices services = 1;
}

message AddPatientAllergiesChronicsRequest {
  repeated PatientAllergiesChronics notes = 1;
}

message AddPatientVisitRequest {
  int32 appointment_id = 2;
  int32 patient_id = 3;
  int32 doctor_id = 4;
  string complaints = 5;
  string treatment = 6;
  google.protobuf.Timestamp created_at = 7;
}

message AddPatientDiagnosesRequest {
  repeated VisitDiagnose diagnoses = 1;
}

message DefaultResponse {
  string error = 1;
}

message AddVisitResponse {
  int32 id = 1;
}

message VisitPaymentRequest {
  int32 visit_id = 1;
  int32 price = 2;
  string status = 3;
}

message AddConsultationRequest {
  int32 appointment_id = 1;
  int32 patient_id = 2;
  int32 doctor_id = 3;
  string complaints = 4;
  string treatment = 5;
  repeated VisitDiagnose diagnoses = 6;
  repeated AddVisitServices services = 7;
  repeated AddVisitMaterials materials = 8;
  string token = 9;
}

message AddConsultationResponse {
  int32 visit_id = 1;
  int32 total_price = 2;
}

message GetDocumentsRequest {
  int32 patientID = 1;
}

// Ответ с массивом документов
message GetDocumentsResponse {
  repeated DocumentInfo documents = 1;
}

// Информация о документе
message DocumentInfo {
  string id = 1;           // UUID документа
  string file_name = 2;    // Имя файла
  string description = 3;  // Описание
  string created_at = 6;   // Дата создания (формат YYYY-MM-DD HH:MM)
}

// Запрос на скачивание документа
message DownloadDocumentRequest {
  string document_id = 1; // UUID документа
}

// Ответ со скачанным файлом
message DownloadDocumentResponse {
  string file_name = 1;    // Имя файла
  bytes file_content = 2;  // Содержимое файла
}


service DoctorService {
  rpc GetTodayAppointments(GetTodayAppointmentsRequest) returns (GetTodayAppointmentsResponse);
  rpc GetUpcomingAppointments(GetUpcomingAppointmentsRequest) returns (GetUpcomingAppointmentsResponse);
  rpc GetPatientAllergiesChronics(GetByIdRequest) returns (GetPatientAllergiesChronicsResponse);
  rpc GetAppointmentByID(GetByIdRequest) returns (GetAppointmentByIDResponse);
  rpc GetPatientVisits(GetByIdRequest) returns (GetPatientVisitsResponse);

  rpc AddPatientAllergiesChronics(AddPatientAllergiesChronicsRequest) returns (DefaultResponse);
  rpc AddPatientVisit(AddPatientVisitRequest) returns (AddVisitResponse);
  rpc AddVisitMaterials(AddVisitMaterialsRequest) returns (DefaultResponse);
  rpc AddVisitServices(AddVisitServicesRequest) returns (DefaultResponse);
  rpc AddPatientDiagnoses(AddPatientDiagnosesRequest) returns (DefaultResponse);
  rpc AddVisitPayment(VisitPaymentRequest) returns (DefaultResponse);
  rpc UpdateVisitPayment(VisitPaymentRequest) returns (DefaultResponse);

  rpc AddConsultation(AddConsultationRequest) returns (AddConsultationResponse);

  rpc GetDocumentsByPatientID(GetDocumentsRequest) returns (GetDocumentsResponse);
  rpc DownloadDocument(DownloadDocumentRequest) returns (DownloadDocumentResponse);
}